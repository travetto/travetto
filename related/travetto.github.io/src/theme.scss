@use '~@angular/material' as mat;

$general-typography: mat.define-typography-config($font-family: '"Source Sans Pro", sans-serif',
$display-3: mat.define-typography-level(40px, 24px, 400),
$headline: mat.define-typography-level(35px, 24px, 400),
$title: mat.define-typography-level(28px, 24px, 400),
$body-1: mat.define-typography-level(20px, 20px, 300),
$body-2: mat.define-typography-level(20px, 20px, 600));
//  $body-2:        mat.define-typography-level(14px, 24px, 600)  
// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($general-typography);


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
$app-primary: mat.define-palette(mat.$green-palette);
$app-accent: mat.define-palette(mat.$blue-grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat.define-light-theme($app-primary, $app-accent, $app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

body.mat-typography {

  .mat-display-1,
  .mat-display-2,
  .mat-display-3,
  .mat-display-4,
  h1,
  h2,
  [mat-button] {
    font-weight: normal;
    font-family: 'Julius Sans One', sans-serif;
  }
}

p {
  line-height: 1.25em;
  word-break: break-word;
}